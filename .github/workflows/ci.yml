name: CI 

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
    paths-ignore:
        - '.github/**'


  pull_request:
    branches: [ master ]
    paths-ignore:
        - '.github/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        julia-version: ['1','1.6','nightly']
        julia-arch: [x64]
        os: [ubuntu-latest]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.julia-version }}
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@latest
        with:
          coverage: 'false'
      - name: Do the coverage run
        if: matrix.julia-version == '1.6' && matrix.julia-arch == 'x64'
        uses: julia-actions/julia-runtest@latest
      - name: Process the coverage run
        if: matrix.julia-version == '1.6' && matrix.julia-arch == 'x64'
        run: |
                       julia -e 'using Pkg; Pkg.add("Coverage"); using Coverage; LCOV.writefile("lcov.info",process_folder())'
      - name: Upload coverage data
        if: matrix.julia-version == '1.6' && matrix.julia-arch == 'x64'
        uses: coverallsapp/github-action@master
        with:
              github-token: ${{ secrets.GITHUB_TOKEN }}
              path-to-lcov: './lcov.info'
  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - run: | 
              julia --project=docs -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd()));Pkg.instantiate()'
              julia --project=docs docs/make.jl
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
